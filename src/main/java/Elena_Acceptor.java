import java.io.IOException;import java.net.InetSocketAddress;import java.nio.channels.SelectionKey;import java.nio.channels.ServerSocketChannel;import java.nio.channels.SocketChannel;import java.util.concurrent.ThreadLocalRandom;/** * Created by demopoo on 2017/9/22. */public class Elena_Acceptor implements Runnable {    private final ServerSocketChannel serverSocketChannel;    private final Elena_Reactor[] elena_reactors;    public Elena_Acceptor(String ip,int port,Elena_Reactor[] elena_reactors) throws IOException{        this.elena_reactors = elena_reactors;        serverSocketChannel = ServerSocketChannel.open();        serverSocketChannel.bind(new InetSocketAddress(ip,port));        serverSocketChannel.configureBlocking(true);    }    @Override    public void run() {        try {            SocketChannel socketChannel = serverSocketChannel.accept();            //此时随机选择一个selector进行注册。也可以采用轮训或者hash取模方式到达负载平衡            socketChannel.register(elena_reactors[ThreadLocalRandom.current().nextInt(elena_reactors.length)-1].selector, SelectionKey.OP_READ);        }catch (IOException ex){        }    }}