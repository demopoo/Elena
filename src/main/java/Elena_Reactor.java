import handle.Elena_IOHandle;import handle.connect.ConnectionHandle;import java.io.IOException;import java.nio.channels.ClosedChannelException;import java.nio.channels.SelectionKey;import java.nio.channels.Selector;import java.nio.channels.SocketChannel;import java.util.Set;import java.util.concurrent.ExecutorService;/** * Created by demopoo on 2017/9/21. */public class Elena_Reactor extends Thread {    public final ExecutorService executorService;    public Selector selector;    public Elena_Reactor(ExecutorService executorService) throws IOException{        this.executorService = executorService;        selector = Selector.open();    }    public void register(SocketChannel socketChannel) throws Exception{        new ConnectionHandle(selector,socketChannel);    }    @Override    public void run() {        while (true){            try {                selector.select(500);                Set<SelectionKey> selectionKeys = selector.selectedKeys();                for (SelectionKey selectionKey: selectionKeys) {                    Elena_IOHandle elena_ioHandle = (Elena_IOHandle) selectionKey.attachment();                    this.executorService.execute(elena_ioHandle);                }                selectionKeys.clear();            }catch (Exception ex){                ex.printStackTrace();                continue;            }        }    }}